<items><item><question>001 что будет распечатано при попытке выполнить следующий код?

`        int i=3;
         if (i&amp;lt;5) {
             System.out.print(&quot;A&quot;);
         } if (i&amp;lt;10) {
             System.out.print(&quot;B&quot;);
         }`</question><answers><answer>A</answer><answer>B</answer><answer>AB</answer><answer>ничего</answer></answers></item>
<item><question>002 что будет распечатано при попытке выполнить следующий код?
`        for (int i = 0; i &amp;lt; 10; i++) {
             System.out.print(i);
         }`</question><answers><answer>12345678910</answer><answer>1234567890</answer><answer>01234567890</answer><answer>0123456789</answer></answers></item>
<item><question>003 что будет распечатано при попытке выполнить следующий код?
`        int i=2;
         switch (i) {
             case 3:
                 System.out.print(&quot;3&quot;);
             case 2:
                 System.out.print(&quot;2&quot;);
             case 1:
                 System.out.print(&quot;1&quot;);
             default:
                 System.out.print(&quot;d&quot;);
         }`</question><answers><answer>d123</answer><answer>21d</answer><answer>321d</answer><answer>321</answer></answers></item>
<item><question>004 что будет распечатано при попытке выполнить следующий код?
`        for (int i = 0; i &amp;gt -10; i--) {
             System.out.print(i);
         }`</question><answers><answer>9-8-7-6-5-4-3-2-1-0</answer><answer>01234567890</answer><answer>123456789</answer><answer>0-1-2-3-4-5-6-7-8-9</answer></answers></item>
<item><question>005 что будет распечатано при попытке выполнить следующий код?
`        System.out.println(5&amp;1);`</question><answers><answer>5</answer><answer>1</answer><answer>true</answer><answer>false</answer></answers></item>
<item><question>006 что будет распечатано при попытке выполнить следующий код?
`        System.out.print(8&amp;gt1);
         System.out.print(8&amp;gt&amp;gt1);
         System.out.print(8&amp;gt&amp;gt&amp;gt1);
`</question><answers><answer>888</answer><answer>421</answer><answer>444</answer><answer>none of the above</answer></answers></item>
<item><question>008 что будет распечатано при попытке выполнить следующий код?
`public class Test008 {
     public static void main(String [] args) {
         Test008 s = new Test008();
         s.start();
     }

     void start() {
         int a = 3;
         int b = 4;
         System.out.print(&quot; &quot; + 7 + 2 + &quot; &quot;);
         System.out.print(a + b);
         System.out.print(&quot; &quot; + a + b + &quot; &quot;);
         System.out.print(hello() + a + b + &quot; &quot;);
         System.out.println(a + b + hello());
     }

     String hello() {
         return &quot;hello&quot;;
     }
 }
`</question><answers><answer>9 7 7 hello 7 7hello</answer><answer>72 34 34 hello34 34hello</answer><answer>9 7 7 hello34 34hello</answer><answer>72 7 34 hello34 7hello</answer></answers></item>
<item><question>009 что будет распечатано при попытке выполнить следующий код?
`
    boolean [] b = new boolean[3];
    int c = 0;

    public static void main(String [] args) {
        Test009 ba = new Test009();
        ba.set(ba.b, 0);
        ba.set(ba.b, 2);
        ba.test();
    }

    void set(boolean []x, int i) {
        x[i] = true;
        ++c;
    }

    void test() {
        if ( b[0] &amp;&amp; b[1] | b[2] )  c++;
        if ( b[1] &amp;&amp; b[(++c - 2)] ) c+=7;
        System.out.println(&quot;c=&quot; + c);
    }`</question><answers><answer>c=1</answer><answer>c=2</answer><answer>c=3</answer><answer>c=4</answer><answer>c=5</answer><answer>c=6</answer><answer>c=7</answer></answers></item>
<item><question>010 какие выражения эквивалентны ?
1. 3/2
2. 3&amp;lt;2
3. 3*4
4. 3&amp;lt;&amp;lt;2</question><answers><answer>1 и 2</answer><answer>2 и 3</answer><answer>3 и 4</answer><answer>4 и 1</answer></answers></item>
<item><question>011 как поведет себя эта функция
`
    public static void test( boolean a, boolean b) {
        if (a) {
            System.out.println(&quot;A&quot;);
        } else if (a &amp;&amp; b) {
            System.out.println( &quot;A &amp;&amp; B&quot;);
        } else {
            if (!b) {
                System.out.println( &quot;notB&quot;) ;
            }
            else {
                System.out.println( &quot;ELSE&quot; ) ;
            }
        }
    }`</question><answers><answer>a=true и b==true : напечатет &quot;A &amp;&amp; B&quot;</answer><answer>a=true и b=false : напечатет &quot;notB&quot;</answer><answer>a=false и b=true : напечатет &quot;ELSE&quot;</answer><answer>a=false и b=false : напечатет &quot;ELSE&quot;</answer></answers></item>
<item><question>012 что будет распечатано при попытке выполнить следующий код?
`
        Float f = new Float(&quot;12&quot;);
        switch (f) {
            case 12: System.out.println(&quot;Twelve&quot;);
            case 0: System.out.println(&quot;Zero&quot;);
            default: System.out.println(&quot;Default&quot;);
        }`</question><answers><answer>Zero</answer><answer>Twelve</answer><answer>Default</answer><answer>ошибка компиляции</answer></answers></item>
<item><question>025 что сучится
`public class Test138
 {
     public static void stringReplace (String text)
     {
         text = text.replace (&apos;j&apos; , &apos;c&apos;); /* Line 5 */
     }
     public static void bufferReplace (StringBuffer text)
     {
         text = text.append (&quot;c&quot;);  /* Line 9 */
     }
     public static void main (String args[])
     {
         String textString = new String (&quot;java&quot;);
         StringBuffer textBuffer = new StringBuffer (&quot;java&quot;); /* Line 14 */
         stringReplace(textString);
         bufferReplace(textBuffer);
         System.out.println (textString + textBuffer);
     }
 }`</question><answers><answer>java</answer><answer>javac</answer><answer>javajavac</answer><answer>Compile error</answer></answers></item>
<item><question>026 What will be the output of the program (in jdk1.6 or above)?
`public class BoolTest
 {
     public static void main(String [] args)
     {
         Boolean b1 = new Boolean(&quot;false&quot;);
         boolean b2;
         b2 = b1.booleanValue();
         if (!b2)
         {
             b2 = true;
             System.out.print(&quot;x &quot;);
         }
         if (b1 &amp; b2) /* Line 13 */
         {
             System.out.print(&quot;y &quot;);
         }
         System.out.println(&quot;z&quot;);
     }
 }`</question><answers><answer>z</answer><answer>x z</answer><answer>y z</answer><answer>Compilation fails.</answer></answers></item>
<item><question>027 what will be printed
`
public class Quizz1 {
    public static void main(String[] args) {
        String s=&quot;Apple &quot;+
                &quot;costs &quot; +
                + &apos;2&apos; +
                &quot; UAH&quot;;
        System.out.println(s);
    }
}`</question><answers><answer>Apple costs 2 UAH</answer><answer>Other output</answer><answer>Runtime exception</answer><answer>Complier error</answer></answers></item>
<item><question>032 What will be the output of the program?
`
public class ArrayTest {
    public static void main(String[ ] args)
    {
        float f1[ ], f2[ ];
        f1 = new float[10];
        f2 = f1;
        System.out.println(&quot;f2[0] = &quot; + f2[0]);
    }
}`</question><answers><answer>It prints f2[0] = 0.0</answer><answer>It prints f2[0] = NaN</answer><answer>An error at f2 = f1; causes compile to fail.</answer><answer>It prints the garbage value.</answer></answers></item>
<item><question>036 What will be the output of the program?
`
public class If2 {
    static boolean b1, b2;
    public static void main(String [] args) {
        int x = 0;
        if ( !b1 ) {
            if ( !b2 ) {
                b1 = true;
                x++;
                if ( 5 &amp;gt 6 ) {
                    x++;
                }
                if ( !b1 )
                    x = x + 10;
                else if ( b2 = true )
                    x = x + 100;
                else if ( b1 | b2 )
                    x = x + 1000;
            }
        }
        System.out.println(x);
    }
}`</question><answers><answer>0</answer><answer>1</answer><answer>101</answer><answer>111</answer></answers></item>
<item><question>037 What will be the output of the program?
`
public class If1 {
    static boolean b;
    public static void main(String [] args) {
        short hand = 42;
        if ( hand &amp;lt; 50 &amp;&amp; !b )
            hand++;
        if ( hand &amp;gt 50 );
        else if ( hand &amp;gt 40 ) {
            hand += 7;
            hand++;
        }
        else
            --hand;
        System.out.println(hand);
    }
}`</question><answers><answer>41</answer><answer>42</answer><answer>50</answer><answer>51</answer></answers></item>
<item><question>038 What will be the output of the program?
`
int i = 0;
while(1)
{
    if(i == 4)
    {
        break;
    }
    ++i;
}
System.out.println(&quot;i = &quot; + i);
`</question><answers><answer>i = 0</answer><answer>i = 3</answer><answer>i = 4</answer><answer>Compilation fails.</answer></answers></item>
<item><question>039 What will be the output of the program?
`
int i = 0, j = 5;
tp: for (;;)
    {
        i++;
        for (;;)
        {
            if(i &amp;gt --j)
            {
                break tp;
            }
        }
        System.out.println(&quot;i =&quot; + i + &quot;, j = &quot; + j);
`</question><answers><answer>i = 1, j = 0</answer><answer>i = 1, j = 4</answer><answer>i = 3, j = 4</answer><answer>Compilation fails.</answer></answers></item>
<item><question>040 What will be the output of the program?
`
int I = 0;
label:
    if (I &amp;lt; 2) {
    System.out.print(&quot;I is &quot; + I);
    I++;
    continue label;
}
`</question><answers><answer>I is 0</answer><answer>I is 0 I is 1</answer><answer>Compilation fails.</answer><answer>None of the above</answer></answers></item>
<item><question>049 What will be the output of the program?
`
public class Test049 {
    public static void main(String[] args) {
        double value = -9.0;
        System.out.println( Math.sqrt(value));
    }
}`</question><answers><answer>3.0</answer><answer>-3.0</answer><answer>NaN</answer><answer>Compilation fails.</answer><answer>Runtime Exception</answer></answers></item>
<item><question>050 What will be the output of the program?
`
public class Test050 {
    public static void main(String[] args) {
        String a = &quot;newspaper&quot;;
        a = a.substring(5,7);
        char b = a.charAt(1);
        a = a + b;
        System.out.println(a);
    }
}`</question><answers><answer>apa</answer><answer>app</answer><answer>apea</answer><answer>apep</answer></answers></item>
<item><question>052 What is the widest valid returnType for methodA
`
public class ReturnIt {
    returnType methodA(byte x, double y) {
        return (long)x / y * 2;
    }
}`</question><answers><answer>int</answer><answer>byte</answer><answer>long</answer><answer>double</answer></answers></item>
<item><question>053 Which two cause a compiler error?

`
1. float[] f = new float(3);
2. float f2[] = new float[];
3. float[]f1 = new float[3];
4. float f3[] = new float[3];
5. float f5[] = {1.0f, 2.0f, 2.0f};
`</question><answers><answer>2, 4</answer><answer>3, 5</answer><answer>4, 5</answer><answer>1, 2</answer></answers></item>
<item><question>056 What will be the output of the program?
`
class Test {
    public static void main(String [] args) {
        int x=0;
        int y=0;
        for (int z = 0; z &amp;lt; 5; z++) {
            if (( ++x &amp;gt 2 ) || (++y &amp;gt 2)) {
                x++;
            }
        }
        System.out.println(x + &quot; &quot; + y);
    }
}`</question><answers><answer>5 3</answer><answer>8 2</answer><answer>8 3</answer><answer>8 5</answer></answers></item>
<item><question>057 which three statements are true?
1. f1 == f2
2. f1 == f3
3. f2 == f1[1]
4. x == f1[0]
5. f == f1[0]
`
class CompareReference {
    public static void main(String [] args) {
        float f = 42.0f;
        float [] f1 = new float[2];
        float [] f2 = new float[2];
        float [] f3 = f1;
        long x = 42;
        f1[0] = 42.0f;
    }
}
`</question><answers><answer>1, 2 and 3</answer><answer>2, 4 and 5</answer><answer>3, 4 and 5</answer><answer>1, 4 and 5</answer></answers></item>
<item><question>062 What line of code should replace the missing statement to make this program compile?
`
public class foo {
    public static void main(String[]args)throws Exception {
        java.io.PrintWriter out = new java.io.PrintWriter();
        new java.io.OutputStreamWriter(System.out,true);
        out.println(&quot;Hello&quot;);
    }
}`</question><answers><answer>No statement required.</answer><answer>import java.io.*;</answer><answer>include java.io.*;</answer><answer>import java.io.PrintWriter;</answer></answers></item>
<item><question>074 What will be the output of the program?
`
class Test {
    public static void main(String [] args) {
        Test p = new Test();
        p.start();
    }

    void start() {
        boolean b1 = false;
        boolean b2 = fix(b1);
        System.out.println(b1 + &quot; &quot; + b2);
    }

    boolean fix(boolean b1) {
        b1 = true;
        return b1;
    }
}
`</question><answers><answer>true true</answer><answer>false true</answer><answer>true false</answer><answer>false false</answer></answers></item>
<item><question>075 What will be the output of the program?
`
class PassS {
    public static void main(String [] args) {
        PassS p = new PassS();
        p.start();
    }

    void start() {
        String s1 = &quot;slip&quot;;
        String s2 = fix(s1);
        System.out.println(s1 + &quot; &quot; + s2);
    }

    String fix(String s1) {
        s1 = s1 + &quot;stream&quot;;
        System.out.print(s1 + &quot; &quot;);
        return &quot;stream&quot;;
    }
}`</question><answers><answer>slip stream</answer><answer>slipstream stream</answer><answer>stream slip stream</answer><answer>slipstream slip stream</answer></answers></item>
<item><question>076 What will be the output of the program?
`
class Test {
    static int s;
    public static void main(String [] args) {
        Test p = new Test();
        p.start();
        System.out.println(s);
    }

    void start() {
        int x = 7;
        twice(x);
        System.out.print(x + &quot; &quot;);
    }

    void twice(int x) {
        x = x*2;
        s = x;
    }
}`</question><answers><answer>7 7</answer><answer>7 14</answer><answer>14 0</answer><answer>14 14</answer></answers></item>
<item><question>077 Which statement is true?
`
public void test(int x) {
    int odd = 1;
    if(odd) /* Line 4 */
    {
        System.out.println(&quot;odd&quot;);
    }
    else
    {
        System.out.println(&quot;even&quot;);
    }
}
`</question><answers><answer>Compilation fails.</answer><answer>&quot;odd&quot; will always be output.</answer><answer>&quot;even&quot; will always be output.</answer><answer>&quot;odd&quot; will be output for odd values of x, and &quot;even&quot; for even values.</answer></answers></item>
<item><question>078 What will be the output of the program?
`
int i = 1, j = 10;
do
{
    if(i &amp;gt j)
    {
        break;
    }
    j--;
} while (++i &amp;lt; 5);
System.out.println(&quot;i = &quot; + i + &quot; and j = &quot; + j);
`</question><answers><answer>i = 6 and j = 5</answer><answer>i = 5 and j = 5</answer><answer>i = 6 and j = 4</answer><answer>i = 5 and j = 6</answer></answers></item>
<item><question>079 What will be the output of the program?
`
public class Test {
    public static void main(String args[]) {
        int i = 1, j = 0;
        switch(i)
        {
            case 2: j += 6;
            case 4: j += 1;
            default: j += 2;
            case 0: j += 4;
        }
        System.out.println(&quot;j = &quot; + j);
    }
}`</question><answers><answer>j = 0</answer><answer>j = 2</answer><answer>j = 4</answer><answer>j = 6</answer></answers></item>
<item><question>082 Which is valid declaration of a float?</question><answers><answer>float f = 1F;</answer><answer>float f = 1.0;</answer><answer>float f = &quot;1&quot;;</answer><answer>float f = 1.0d;</answer></answers></item>
<item><question>089 What will be the output of the program?
`
public class BoolTest {
    public static void main(String [] args)
    {
        int result = 0;

        Boolean b1 = new Boolean(&quot;TRUE&quot;);
        Boolean b2 = new Boolean(&quot;true&quot;);
        Boolean b3 = new Boolean(&quot;tRuE&quot;);
        Boolean b4 = new Boolean(&quot;false&quot;);

        if (b1 == b2)  /* Line 10 */
            result = 1;
        if (b1.equals(b2) ) /* Line 12 */
            result = result + 10;
        if (b2 == b4)  /* Line 14 */
            result = result + 100;
        if (b2.equals(b4) ) /* Line 16 */
            result = result + 1000;
        if (b2.equals(b3) ) /* Line 18 */
            result = result + 10000;

        System.out.println(&quot;result = &quot; + result);
    }
}`</question><answers><answer>0</answer><answer>1</answer><answer>10</answer><answer>10010</answer></answers></item>
<item><question>090 What will be happened ?
`
public class Test211 {
    public static void print() {
        System.out.print(&quot;Hello World &quot;);
    }

    public static void main(String[] args) {
        System.out.print(&quot;before &quot;);
        Test211 t=null;
        ((Test211)t).print();
        System.out.println(&quot;after&quot;);
    }
}`</question><answers><answer>Compilation fails</answer><answer>&quot;Hello Wold&quot; will be printed</answer><answer>Runtime error</answer><answer>&quot;before Hello World after&quot; will be printed</answer><answer>&quot;before&quot; will be printed``</answer></answers></item>
<item><question>094 What will be the output of the program?
`
class Test {
    public static void main(String [] args) {
        int x=20;
        String sup = (x &amp;lt; 15) ? &quot;small&quot; : (x &amp;lt; 22)? &quot;tiny&quot; : &quot;huge&quot;;
        System.out.println(sup);
    }
}`</question><answers><answer>small</answer><answer>tiny</answer><answer>huge</answer><answer>Compilation fails</answer><answer>Runtime error</answer></answers></item>
<item><question>095 Which of the following are legal lines of code?
`
int w = (int)888.8;
byte x = (byte)1000L;
long y = (byte)100;
byte z = (byte)100L;
`</question><answers><answer>1 and 2</answer><answer>2 and 3</answer><answer>3 and 4</answer><answer>All statements are correct.</answer></answers></item>
<item><question>096 Which two statements are equivalent?
`
16*4
16&amp;gt&amp;gt2
16/2^2
16&amp;gt&amp;gt&amp;gt2
`</question><answers><answer>1 and 2</answer><answer>2 and 4</answer><answer>3 and 4</answer><answer>1 and 3</answer></answers></item>
<item><question>097 What will be the output of the program?
`
public class Test {
    public static void main(String [] args) {
        int I = 1;
        do while ( I &amp;lt; 1 )
        System.out.print(&quot;I is &quot; + I);
        while ( I &amp;gt 1 ) ;
    }
}`</question><answers><answer>I is 1</answer><answer>I is 1 I is 1</answer><answer>No output is produced.</answer><answer>Compilation error</answer></answers></item>
<item><question>100 Which of the following are Java reserved words?
`
run
import
default
implement`</question><answers><answer>1 and 2</answer><answer>2 and 3</answer><answer>3 and 4</answer><answer>2 and 4</answer></answers></item>
<item><question>101 What will be the output of the program?
And the command line invocation: java Test red green blue
`
public class Test {
    public static void main (String[] args) {
        String foo = args[1];
        String bar = args[2];
        String baz = args[3];
        System.out.println(&quot;baz = &quot; + baz); /* Line 8 */
    }
}`</question><answers><answer>baz =</answer><answer>baz = null</answer><answer>baz = blue</answer><answer>Runtime Exception</answer></answers></item>
<item><question>107 What will be the output of the program?
`
public class ObjComp {
    public static void main(String [] args ) {
        int result = 0;
        ObjComp oc = new ObjComp();
        Object o = oc;

        if (o == oc)
            result = 1;
        if (o != oc)
            result = result + 10;
        if (o.equals(oc) )
            result = result + 100;
        if (oc.equals(o) )
            result = result + 1000;

        System.out.println(&quot;result = &quot; + result);
    }
}`</question><answers><answer>1</answer><answer>10</answer><answer>101</answer><answer>1101</answer></answers></item>
<item><question>108 What will be the output of the program?
`
public class Test178 {
    public static void main(String[] args) {
        String s = &quot;foo&quot;;
        Object o = (Object)s;
        if (s.equals(o)) {
            System.out.print(&quot;AAA&quot;);
        } else {
            System.out.print(&quot;BBB&quot;);
        }
        if (o.equals(s)) {
            System.out.print(&quot;CCC&quot;);
        } else {
            System.out.print(&quot;DDD&quot;);
        }
    }
}`</question><answers><answer>AAACCC</answer><answer>AAADDD</answer><answer>BBBCCC</answer><answer>BBBDDD</answer></answers></item>
<item><question>109 What will be the output of the program?
`
int i = 1, j = 10;
do {
    if(i++ &amp;gt --j) /* Line 4 */
    {
        continue;
    }
} while (i &amp;lt; 5);
System.out.println(&quot;i = &quot; + i + &quot;and j = &quot; + j); /* Line 9 */
`</question><answers><answer>i = 6 and j = 5</answer><answer>i = 5 and j = 5</answer><answer>i = 6 and j = 6</answer><answer>i = 5 and j = 6</answer></answers></item>
<item><question>110 What will be the output of the program?
`
public class ExamQuestion7 {
    static int j;
    static void methodA(int i){
        boolean b;
        do
        {
            b = i&amp;lt;10 | methodB(4); /* Line 9 */
            b = i&amp;lt;10 || methodB(8);  /* Line 10 */
        }while (!b);
    }

    static boolean methodB(int i) {
        j += i;
        return true;
    }

    public static void main(String[] args) {
        methodA(0);
        System.out.println( &quot;j = &quot; + j );
    }
}`</question><answers><answer>j = 0</answer><answer>j = 4</answer><answer>j = 8</answer><answer>The code will run with no output</answer></answers></item>
<item><question>114 Which two are acceptable types for x?
`
switch(x) {
    default:
        System.out.println(&quot;Hello&quot;);
}

byte
long
char
float
Short
Long
`</question><answers><answer>1 and 3</answer><answer>2 and 4</answer><answer>3 and 5</answer><answer>4 and 6</answer></answers></item>
<item><question>115 What will be the output of the program?
`
public class Switch2 {
    final static short x = 2;
    public static int y = 0;
    public static void main(String [] args) {
        for (int z=0; z &amp;lt; 3; z++){
            switch (z){
                case x: System.out.print(&quot;0 &quot;);
                case x-1: System.out.print(&quot;1 &quot;);
                case x-2: System.out.print(&quot;2 &quot;);
            }
        }
    }
}`</question><answers><answer>0 1 2</answer><answer>0 1 2 1 2 2</answer><answer>2 1 0 1 0 0</answer><answer>2 1 2 0 1 2</answer></answers></item>
<item><question>116 What will be the output of the program?
`
public class Switch2 {
    final static short x = 2;
    public static int y = 0;
    public static void main(String [] args) {
        for (int z=0; z &amp;lt; 3; z++) {
            switch (z) {
                case y: System.out.print(&quot;0 &quot;);   /* Line 11 */
                case x-1: System.out.print(&quot;1 &quot;); /* Line 12 */
                case x: System.out.print(&quot;2 &quot;);
            }
        }
    }
}`</question><answers><answer>0 1 2</answer><answer>0 1 2 1 2 2</answer><answer>Compilation fails at line 11.</answer><answer>Compilation fails at line 12.</answer></answers></item>
<item><question>117 What will be the output of the program?
`
public class Switch2 {
    final static short x = 2;
    public static int y = 0;
    public static void main(String [] args) {
        for (int z=0; z &amp;lt; 4; z++) {
            switch (z) {
                case x: System.out.print(&quot;0 &quot;);
                default: System.out.print(&quot;def &quot;);
                case x-1: System.out.print(&quot;1 &quot;);
                            break;
                case x-2: System.out.print(&quot;2 &quot;);
            }
        }
    }
}`</question><answers><answer>0 def 1</answer><answer>2 1 0 def 1</answer><answer>2 1 0 def def</answer><answer>2 1 0 def 1 def 1</answer></answers></item>
<item><question>130 What two statements are true about the result obtained from calling Math.random()?
`
The result is less than 0.0.
The result is greater than or equal to 0.0.
The result is less than 1.0.
The result is greater than 1.0.
The result is greater than or equal to 1.0.
`</question><answers><answer>1 and 2</answer><answer>2 and 3</answer><answer>3 and 4</answer><answer>4 and 5</answer></answers></item>
<item><question>131 Which cause a compiler error?</question><answers><answer>int[] scores = {3, 5, 7};</answer><answer>int[][] scores = {2,7,6}, {9,3,45};</answer><answer>String cats[] = {&quot;Fluffy&quot;, &quot;Spot&quot;, &quot;Zeus&quot;};</answer><answer>boolean results[] = new boolean [] {true, false, true};</answer><answer>Integer results[] = {new Integer(3), new Integer(5), new Integer(8)};</answer></answers></item>
<item><question>132 Which three are valid method signatures in an interface?
`
private int getArea();
public float getVol(float x);
public void main(String [] args);
public static void main(String [] args);
boolean setFlag(Boolean [] test);
`</question><answers><answer>1 and 2</answer><answer>2, 3 and 5</answer><answer>3, 4, and 5</answer><answer>2 and 4</answer></answers></item>
<item><question>134 What will be the output of the program?
`
class Test {
    public static void main(String [] args) {
        int x= 0;
        int y= 0;
        for (int z = 0; z &amp;lt; 5; z++) {
            if (( ++x &amp;gt 2 ) &amp;&amp; (++y &amp;gt 2)) {
                x++;
            }
        }
        System.out.println(x + &quot; &quot; + y);
    }
}`</question><answers><answer>5 2</answer><answer>5 3</answer><answer>6 3</answer><answer>6 4</answer></answers></item>
<item><question>135 What will be the output of the program?
`
int i = l, j = -1;
switch (i) {
    case 0, 1: j = 1; /* Line 4 */
    case 2: j = 2;
    default: j = 0;
}
System.out.println(&quot;j = &quot; + j);`</question><answers><answer>j = -1</answer><answer>j = 0</answer><answer>j = 1</answer><answer>Compilation fails.</answer></answers></item>
<item><question>136 What will be the output of the program?
`
for(int i = 0; i &amp;lt; 3; i++) {
    switch(i) {
        case 0: break;
        case 1: System.out.print(&quot;one &quot;);
        case 2: System.out.print(&quot;two &quot;);
        case 3: System.out.print(&quot;three &quot;);
    }
}
System.out.println(&quot;done&quot;);`</question><answers><answer>done</answer><answer>one two done</answer><answer>one two three done</answer><answer>one two three two three done</answer></answers></item>
<item><question>137 What will be the output of the program?
`
boolean bool = true;
if(bool = false) /* Line 2 */{
    System.out.println(&quot;a&quot;);
} else if(bool) /* Line 6 */ {
    System.out.println(&quot;b&quot;);
} else if(!bool) /* Line 10 */{
    System.out.println(&quot;c&quot;); /* Line 12 */
}
else {
    System.out.println(&quot;d&quot;);
}`</question><answers><answer>a</answer><answer>b</answer><answer>c</answer><answer>d</answer></answers></item>
<item><question>142 What will be the output of the program?
`
public class Test142 {
    public static void main (String [] args) {
        Object o = new Object() /* Line 5 */ {
            public boolean equals(Object obj) {
                return true;
            }
        };      /* Line 11 */
        System.out.println(o.equals(&quot;Fred&quot;));
    }
}`</question><answers><answer>It prints &quot;true&quot;.</answer><answer>It prints &quot;Fred&quot;.</answer><answer>An exception occurs at runtime.</answer><answer>Compilation fails</answer></answers></item>
<item><question>148 Select how you would start the program to cause it to print: Arg is 2
`
public class Myfile {
    public static void main (String[] args) {
        String biz = args[1];
        String baz = args[2];
        String rip = args[3];
        System.out.println(&quot;Arg is &quot; + rip);
    }
}`</question><answers><answer>java Myfile 222</answer><answer>java Myfile 1 2 2 3 4</answer><answer>java Myfile 1 3 2 2</answer><answer>java Myfile 0 1 2 3</answer></answers></item>
<item><question>149 What will be the output of the program?
`int i = (int) Math.random();`</question><answers><answer>i = 0</answer><answer>i = 1</answer><answer>value of i is undetermined</answer><answer>Statement causes a compile error</answer><answer>nothing will be printed</answer></answers></item>
<item><question>152 Which statement is true?
`
public class While {
    public void loop() {
        int x= 0;
        while ( 1 ) /* Line 6 */
        {
            System.out.print(&quot;x plus one is &quot; + (x + 1)); /* Line 8 */
        }
    }
}`</question><answers><answer>There is a syntax error on line 1.</answer><answer>There are syntax errors on lines 1 and 6.</answer><answer>There are syntax errors on lines 1, 6, and 8.</answer><answer>There is a syntax error on line 6.</answer></answers></item>
<item><question>153 What will be the output of the program?
`
int I = 0;
    outer:
    while (true) {
        I++;
        inner:
        for (int j = 0; j &amp;lt; 10; j++) {
            I += j;
            if (j == 3)
                continue inner;
            break outer;
        }
        continue outer;
    }
System.out.println(I);`</question><answers><answer>1</answer><answer>2</answer><answer>3</answer><answer>4</answer></answers></item>
<item><question>154 What will be the output of the program?
`
public class Test {
    private static float[] f = new float[2];
    public static void main (String[] args)
    {
        System.out.println(&quot;f[0] = &quot; + f[0]);
    }
}`</question><answers><answer>f[0] = 0</answer><answer>f[0] = 0.0</answer><answer>Compile Error</answer><answer>Runtime Exception</answer></answers></item>
<item><question>180 Which three are methods of the Object class?
`
notify();
notifyAll();
isInterrupted();
synchronized();
interrupt();
wait(long msecs);
sleep(long msecs);
yield();
`</question><answers><answer>1, 2, 4</answer><answer>2, 4, 5</answer><answer>1, 2, 6</answer><answer>2, 3, 4</answer></answers></item>
<item><question>186 Which of the following would compile without error?</question><answers><answer>int a = Math.abs(-5);</answer><answer>int b = Math.abs(5.0);</answer><answer>int c = Math.abs(5.5F);</answer><answer>int d = Math.abs(5L);</answer></answers></item>
<item><question>188 What will be the output of the program?
`System.out.println(Math.sqrt(-4D));`</question><answers><answer>-2</answer><answer>NaN</answer><answer>Compile Error</answer><answer>Runtime Exception</answer></answers></item>
<item><question>190 Which statement is true given the following?
`Double d = Math.random();`</question><answers><answer>0.0 &amp;lt; d &amp;lt;= 1.0</answer><answer>0.0 &amp;lt;= d &amp;lt; 1.0</answer><answer>Compilation fail</answer><answer>Cannot say.</answer></answers></item>
<item><question>191 What will be the output of the program?
`
public class Test
{
    public int aMethod()
    {
        static int i = 0;
        i++;
        return i;
    }
    public static void main(String args[])
    {
        Test test = new Test();
        test.aMethod();
        int j = test.aMethod();
        System.out.println(j);
    }
}`</question><answers><answer>0</answer><answer>1</answer><answer>2</answer><answer>Compilation fails.</answer></answers></item>
<item><question>192 What will be the output of the program?
`
class PassA
{
    public static void main(String [] args)
    {
        PassA p = new PassA();
        p.start();
    }

    void start()
    {
        long [] a1 = {3,4,5};
        long [] a2 = fix(a1);
        System.out.print(a1[0] + a1[1] + a1[2] + &quot; &quot;);
        System.out.println(a2[0] + a2[1] + a2[2]);
    }

    long [] fix(long [] a3)
    {
        a3[1] = 7;
        return a3;
    }
}`</question><answers><answer>12 15</answer><answer>15 15</answer><answer>3 4 5 3 7 5</answer><answer>3 7 5 3 7 5</answer></answers></item>
<item><question>193 What will be the output of the program?
`
class Equals
{
    public static void main(String [] args)
    {
        int x = 100;
        double y = 100.1;
        boolean b = (x = y); /* Line 7 */
        System.out.println(b);
    }
}`</question><answers><answer>true</answer><answer>false</answer><answer>Compilation fails</answer><answer>An exception is thrown at runtime</answer></answers></item>
<item><question>194 What will be the output of the program?
`
class Bitwise
{
    public static void main(String [] args)
    {
        int x = 11 &amp; 9;
        int y = x ^ 3;
        System.out.println( y | 12 );
    }
}`</question><answers><answer>0</answer><answer>7</answer><answer>8</answer><answer>14</answer></answers></item>
<item><question>195 What will be the output of the program?
`
class SSBool
{
    public static void main(String [] args)
    {
        boolean b1 = true;
        boolean b2 = false;
        boolean b3 = true;
        if ( b1 &amp; b2 | b2 &amp; b3 | b2 ) /* Line 8 */
            System.out.print(&quot;ok &quot;);
        if ( b1 &amp; b2 | b2 &amp; b3 | b2 | b1 ) /*Line 10*/
            System.out.println(&quot;dokey&quot;);
    }
}`</question><answers><answer>ok</answer><answer>dokey</answer><answer>ok dokey</answer><answer>No output is produced</answer><answer>Compilation error</answer></answers></item>
<item><question>196 What will be the output of the program?
`
int x = l, y = 6;
while (y--)
{
    x++;
}
System.out.println(&quot;x = &quot; + x +&quot; y = &quot; + y);`</question><answers><answer>x = 6 y = 0</answer><answer>x = 7 y = 0</answer><answer>x = 6 y = -1</answer><answer>Compilation fails.</answer></answers></item>
<item><question>197 What will be the output of the program?
`
for (int i = 0; i &amp;lt; 4; i += 2)
{
    System.out.print(i + &quot; &quot;);
}
System.out.println(i); /* Line 5 */`</question><answers><answer>0 2 4</answer><answer>0 2 4 5</answer><answer>0 1 2 3 4</answer><answer>Compilation fails.</answer></answers></item>
<item><question>198 What will be the output of the program?
`
int x = 3;
int y = 1;
if (x = y) /* Line 3 */
{
    System.out.println(&quot;x =&quot; + x);
}`</question><answers><answer>x = 1</answer><answer>x = 3</answer><answer>Compilation fails.</answer><answer>The code runs with no output.</answer></answers></item>
<item><question>203 What is the numerical range of char?</question><answers><answer>0 to 32767</answer><answer>0 to 65535</answer><answer>-256 to 255</answer><answer>-32768 to 32767</answer></answers></item>
<item><question>208 What will be the output of the program?
`
try
{
    Float f1 = new Float(&quot;3.0&quot;);
    int x = f1.intValue();
    byte b = f1.byteValue();
    double d = f1.doubleValue();
    System.out.println(x + b + d);
}
catch (NumberFormatException e) /* Line 9 */
{
    System.out.println(&quot;bad number&quot;); /* Line 11 */
}`</question><answers><answer>9.0</answer><answer>bad number</answer><answer>Compilation fails on line 9.</answer><answer>Compilation fails on line 11.</answer></answers></item>
<item><question>209 What will be the output of the program?
`
public class Test209 {
    static int x;

    boolean catch() {
        x++;
        return true;
    }

    public static void main(String[] args) {
        x=0;
        if ((catch() | catch()) || catch())
            x++;
        System.out.println(x);
    }
}`</question><answers><answer>1</answer><answer>2</answer><answer>3</answer><answer>Compilation Fails</answer></answers></item>
<item><question>What will be the output of the program?
&apos;
public class Test211 {
    static int x;

    static boolean catch1() {
        x++;
        return true;
    }

    public static void main(String[] args) {
        x=0;
        if ((catch1() | catch1()) || catch1())
        x++;
        System.out.println(x);
    }
}&apos;</question><answers><answer>1</answer><answer>2</answer><answer>3</answer><answer>4</answer><answer>5</answer></answers></item>
<item><question>210 What will be the output of the program?
`
public class Test210 {
    public static void main(String[] args) {
        String s = &quot;hello&quot;;
        Object o = s;
        if (o.equals(s)) {
            System.out.println(&quot;A&quot;);
        } else {
            System.out.println(&quot;B&quot;);
        }
        if(s.equals(o)) {
            System.out.println(&quot;C&quot;);
        } else {
            System.out.println(&quot;D&quot;);
        }
    }
}

A
B
C
D
`</question><answers><answer>1 and 3</answer><answer>2 and 4</answer><answer>3 and 4</answer><answer>1 and 2</answer></answers></item>
<item><question>070 What will be the output of the program?
`
String a = &quot;ABCD&quot;;
String b = a.toLowerCase();
b.replace(&apos;a&apos;,&apos;d&apos;);
b.replace(&apos;b&apos;,&apos;c&apos;);
System.out.println(b);
`</question><answers><answer>abcd</answer><answer>ABCD</answer><answer>dccd</answer><answer>dcba</answer></answers></item>
<item><question>119 What will be the output of the program?
`
public class Test {
    public static void main (String args[]) {
        String str = NULL;
        System.out.println(str);
    }
}`</question><answers><answer>NULL</answer><answer>Compile Error</answer><answer>Code runs but no output</answer><answer>Runtime Exception</answer></answers></item>
<item><question>128 What will be the output of the program?
`
String x = &quot;xyz&quot;;
x.toUpperCase(); /* Line 2 */
String y = x.replace(&apos;Y&apos;, &apos;y&apos;);
y = y + &quot;abc&quot;;
System.out.println(y);`</question><answers><answer>abcXyZ</answer><answer>abcxyz</answer><answer>xyzabc</answer><answer>XyZabc</answer></answers></item>
<item><question>169 What will be the output of the program?
`
class Test169 {
    public static void main(String[] args) {
        int i1 = 5;
        int i2 = 6;
        String s1 = &quot;7&quot;;
        System.out.println(i1 + i2 + s1);
    }
}`</question><answers><answer>18</answer><answer>117</answer><answer>567</answer><answer>Compiler error</answer></answers></item>
<item><question>170 What will be the output of the program?
`
public class StringRef {
    public static void main(String [] args) {
        String s1 = &quot;abc&quot;;
        String s2 = &quot;def&quot;;
        String s3 = s2;   /* Line 7 */
        s2 = &quot;ghi&quot;;
        System.out.println(s1 + s2 + s3);
    }
}
`</question><answers><answer>abcdefghi</answer><answer>abcdefdef</answer><answer>abcghidef</answer><answer>abcghighi</answer></answers></item>
<item><question>187 How many String objects have been created?
`
String x = new String(&quot;xyz&quot;);
String y = &quot;abc&quot;;
x = x + y;`</question><answers><answer>2</answer><answer>3</answer><answer>4</answer><answer>5</answer></answers></item>
<item><question>014 какие выражения действительны java.util.ArrayList?</question><answers><answer>элементы коллекции отсортированы.</answer><answer>элементы коллекции иммутабельны.</answer><answer>элементы коллекции уникальны</answer><answer>элементы коллекции доступны через уникальный ключ</answer></answers></item>
<item><question>015 какие выражения истинны для method-local inner class</question><answers><answer>It must be marked final.</answer><answer>It can be marked abstract.</answer><answer>It can be marked public.</answer><answer>It can be marked static.</answer></answers></item>
<item><question>028 What will be printer
`public class Quizz2 {
     public static void main(String[] args) {
         int[] numbers = {1,5,7,2,4};
         Queue&amp;lt;Integer&amp;gt myQueue = new PriorityQueue&amp;lt;&amp;gt();
         int index = 0;
         while(index &amp;lt; numbers.length) {
             myQueue.add(numbers[index]);
             index++;
         }
         System.out.println(myQueue);
     }
 }`</question><answers><answer>1, 2, 4, 5, 7</answer><answer>7, 5, 4, 2, 1</answer><answer>1, 5, 7, 2, 4</answer><answer>other</answer><answer>undetermined</answer></answers></item>
<item><question>029
`public class Quizz3 {
     public static void main(String[] args) {
         HashSet&amp;lt;Short&amp;gt set = new HashSet&amp;lt;&amp;gt();
         System.out.println(set.size());
         for (short i = 0; i &amp;lt; 100; i++) {
             set.add(i);
             set.remove(i-1);
         }
         System.out.println(set.size());
     }
 }`</question><answers><answer>0</answer><answer>1</answer><answer>100</answer><answer>99</answer><answer>Runtime Exception</answer><answer>Compiler error</answer></answers></item>
<item><question>043 Which statement is true?

`class Test1 {
     public int value;
     public int hashCode() { return 42; }
 }
 class Test2 {
     public int value;
     public int hashcode() { return (int)(value^5); }
 }
`</question><answers><answer>class Test1 will not compile.</answer><answer>The Test1 hashCode() method is more efficient than the Test2 hashCode() method.</answer><answer>The Test1 hashCode() method is less efficient than the Test2 hashCode() method.</answer><answer>class Test2 will not compile.</answer></answers></item>
<item><question>061 You need to store elements in a collection that guarantees that no duplicates are stored and all elements can be accessed in natural order. Which interface provides that capability?</question><answers><answer>java.util.Map</answer><answer>java.util.Set</answer><answer>java.util.List</answer><answer>java.util.Collection</answer></answers></item>
<item><question>084 What will be the output of the program?
`
TreeSet map = new TreeSet();
map.add(&quot;one&quot;);
map.add(&quot;two&quot;);
map.add(&quot;three&quot;);
map.add(&quot;four&quot;);
map.add(&quot;one&quot;);
Iterator it = map.iterator();
while (it.hasNext() ) {
    System.out.print( it.next() + &quot; &quot; );
}`</question><answers><answer>one two three four</answer><answer>four three two one</answer><answer>four one three two</answer><answer>one two three four one</answer><answer>order in which items will be printed is undefined</answer></answers></item>
<item><question>118 Which collection class allows you to grow or shrink its size and provides indexed access to its elements, but whose methods are not synchronized?</question><answers><answer>java.util.HashSet</answer><answer>java.util.LinkedHashSet</answer><answer>java.util.List</answer><answer>java.util.ArrayList</answer></answers></item>
<item><question>140 Which interface provides the capability to store objects using a key-value pair?</question><answers><answer>Java.util.Map</answer><answer>Java.util.Set</answer><answer>Java.util.List</answer><answer>Java.util.Collection</answer></answers></item>
<item><question>141 Which of the following statements about the hashcode() method are incorrect?
`
The value returned by hashcode() is used in some collection classes to help locate objects.
The hashcode() method is required to return a positive int value.
The hashcode() method in the String class is the one inherited from Object.
Two new empty String objects will produce identical hashcodes.
`</question><answers><answer>1 and 2</answer><answer>2 and 3</answer><answer>3 and 4</answer><answer>1 and 4</answer></answers></item>
<item><question>155 Which two statements are true about comparing two instances of the same class, given that the equals() and hashCode() methods have been properly overridden?
`
If the equals() method returns true, the hashCode() comparison == must return true.
If the equals() method returns false, the hashCode() comparison != must return true.
If the hashCode() comparison == returns true, the equals() method must return true.
If the hashCode() comparison == returns true, the equals() method might return true.
`</question><answers><answer>1 and 4</answer><answer>2 and 3</answer><answer>3 and 4</answer><answer>1 and 3</answer></answers></item>
<item><question>156 Assuming that the equals() and hashCode() methods are properly implemented, if the output is &quot;x = 1111&quot;, which of the following statements will always be true?
`
x = 0;
if (x1.hashCode() != x2.hashCode() )  x = x + 1;
if (x3.equals(x4) )  x = x + 10;
if (!x5.equals(x6) ) x = x + 100;
if (x7.hashCode() == x8.hashCode() )  x = x + 1000;
System.out.println(&quot;x = &quot; + x);`</question><answers><answer>x2.equals(x1)</answer><answer>x3.hashCode() == x4.hashCode()</answer><answer>x5.hashCode() != x6.hashCode()</answer><answer>x8.equals(x7)</answer></answers></item>
<item><question>177 Which interface does java.util.Hashtable implement?</question><answers><answer>Java.util.Map</answer><answer>Java.util.List</answer><answer>Java.util.HashTable</answer><answer>Java.util.Collection</answer></answers></item>
<item><question>178 What will be the output of the program?
`
package foo;
import java.util.Vector; /* Line 2 */
private class MyVector extends Vector
{
    int i = 1; /* Line 5 */
    public MyVector()
    {
        i = 2;
    }
}
public class MyNewVector extends MyVector
{
    public MyNewVector ()
    {
        i = 4; /* Line 15 */
    }
    public static void main (String args [])
    {
        MyVector v = new MyNewVector(); /* Line 19 */
    }
}`</question><answers><answer>Compilation will succeed.</answer><answer>Compilation will fail at line 3.</answer><answer>Compilation will fail at line 5.</answer><answer>Compilation will fail at line 15.</answer></answers></item>
<item><question>179 What two statements are true about properly overridden hashCode() and equals() methods?
`
hashCode() doesn&apos;t have to be overridden if equals() is.
equals() doesn&apos;t have to be overridden if hashCode() is.
hashCode() can always return the same value, regardless of the object that invoked it.
equals() can be true even if it&apos;s comparing different objects.
`</question><answers><answer>1 and 2</answer><answer>2 and 3</answer><answer>3 and 4</answer><answer>1 and 3</answer></answers></item>
<item><question>201 You need to store elements in a collection that guarantees that no duplicates are stored. Which one of the following interfaces provide that capability?</question><answers><answer>Java.util.Map</answer><answer>Java.util.List</answer><answer>Java.util.Collection</answer><answer>None of the above</answer></answers></item>
<item><question>202 Which collection class allows you to access its elements by associating a key with an element&apos;s value, and provides synchronization?</question><answers><answer>java.util.SortedMap</answer><answer>java.util.TreeMap</answer><answer>java.util.TreeSet</answer><answer>java.util.Hashtable</answer></answers></item>
<item><question>204 Which of the following are true statements?
`
The Iterator interface declares only three methods: hasNext, next and remove.
The ListIterator interface extends both the List and Iterator interfaces.
The ListIterator interface provides forward and backward iteration capabilities.
The ListIterator interface provides the ability to modify the List during iteration.
The ListIterator interface provides the ability to determine its position in the List.
`</question><answers><answer>2, 3, 4 and 5</answer><answer>1, 3, 4 and 5</answer><answer>3, 4 and 5</answer><answer>1, 2 and 3</answer></answers></item>
<item><question>013 что будет распечатано при попытке выполнить следующий код?
`
public class Test012 {
    public static void aMethod() throws Exception {
        try {
            throw new Exception();
        }
        finally {
            System.out.print(&quot;finally &quot;);
        }
    }

    public static void main(String args[]) {
        try {
            aMethod();
        }
        catch (Exception e) {
            System.out.print(&quot;exception &quot;);
        }
        System.out.print(&quot;finished&quot;);
    }
}`</question><answers><answer>finally</answer><answer>exception finished</answer><answer>finally exception finished</answer><answer>Compilation fails</answer></answers></item>
<item><question>020 в какой месте будет ошибка компиляции
`
public class Test020 {
    public void one() {
        assert false; // 1
        assert false; // 2
    }

    public void two() {
        while(true) {
            assert false; // 3
        }
        assert false; // 4
    }
}`</question><answers><answer>1</answer><answer>2</answer><answer>3</answer><answer>3</answer></answers></item>
<item><question>021 что напечатает программа
`
public class Test022 {
    public static int y;

    public static void two(int x) {
        System.out.print(&quot;two &quot;);
        y = x;
    }

    public static int one(int z) {
        System.out.print(&quot;one &quot;);
        return y = z;
    }

    public static void main(String [] args ) {
        int t = 0;
        assert t &amp;gt 0 : one(7);
        assert t &amp;gt 1 : two(8);
        System.out.println(&quot;done &quot;);
    }
}`</question><answers><answer>one</answer><answer>two</answer><answer>one done</answer><answer>two done</answer><answer>one two done</answer><answer>ошибка компиляции</answer></answers></item>
<item><question>022 Which of the following statements is true?

A.	In an assert statement, the expression after the colon ( : ) can be any Java expression.
B.	If a switch block has no default, adding an assert default is considered appropriate.
C.	In an assert statement, if the expression after the colon ( : ) does not have a value, the assert&apos;s error message will be empty.
D.	It is appropriate to handle assertion failures using a catch clause.</question><answers><answer>A</answer><answer>B</answer><answer>C</answer><answer>D</answer></answers></item>
<item><question>023 which line is an example of an inappropriate use of assertions
`
public class Test2
{
    public static int x;
    public static int foo(int y)
    {
        return y * 2;
    }
    public static void main(String [] args)
    {
        int z = 5;
        assert z &amp;gt 0; /* Line 11 */
        assert z &amp;gt 2: foo(z); /* Line 12 */
        if ( z &amp;lt; 7 )
            assert z &amp;gt 4; /* Line 14 */

        switch (z)
        {
            case 4: System.out.println(&quot;4 &quot;);
            case 5: System.out.println(&quot;5 &quot;);
            default: assert z &amp;lt; 10;
        }

        if ( z &amp;lt; 10 )
            assert z &amp;gt 4: z++; /* Line 22 */
        System.out.println(z);
    }
}`</question><answers><answer>1</answer><answer>2</answer><answer>3</answer><answer>4</answer></answers></item>
<item><question>024 What will be the output of the program?
`
public class NFE
{
    public static void main(String [] args)
    {
    String s = &quot;42&quot;;
        try
        {
            s = s.concat(&quot;.5&quot;);  /* Line 8 */
            double d = Double.parseDouble(s);
            s = Double.toString(d);
            int x = (int) Math.ceil(Double.valueOf(s).doubleValue());
            System.out.println(x);
        }
        catch (NumberFormatException e)
        {
            System.out.println(&quot;bad number&quot;);
        }
    }
}`</question><answers><answer>42</answer><answer>42.5</answer><answer>43</answer><answer>bad number</answer></answers></item>
<item><question>041 What will be the output of the program?
`
try {
    int x = 0;
    int y = 5 / x;
}
catch (Exception e) {
    System.out.println(&quot;Exception&quot;);
}
catch (ArithmeticException ae) {
    System.out.println(&quot; Arithmetic Exception&quot;);
}
System.out.println(&quot;finished&quot;);
`</question><answers><answer>finished</answer><answer>Exception</answer><answer>Compilation fails.</answer><answer>Arithmetic Exception</answer></answers></item>
<item><question>042 Which statement is true?</question><answers><answer>A try statement must have at least one corresponding catch block.</answer><answer>Multiple catch statements can catch the same class of exception more than once.</answer><answer>An Error that might be thrown in a method must be declared as thrown by that method, or be handled within that method.</answer><answer>Except in case of VM shutdown, if a try block starts to execute, a corresponding finally block will always start to execute.</answer></answers></item>
<item><question>048 What causes compilation to fail?
`
public class Test {
    public void foo()
    {
        assert false; /* Line 5 */
        assert false; /* Line 6 */
    }
    public void bar()
    {
        while(true)
        {
            assert false; /* Line 12 */
        }
        assert false;  /* Line 14 */
    }
}`</question><answers><answer>Line 5</answer><answer>Line 6</answer><answer>Line 12</answer><answer>Line 14</answer></answers></item>
<item><question>058 What will be the output of the program?
`
public class MyProgram {
    public static void main(String args[]){
        try {
            System.out.print(&quot;Hello world &quot;);
        }
        finally {
            System.out.println(&quot;Finally executing &quot;);
        }
    }
}`</question><answers><answer>Nothing. The program will not compile because no exceptions are specified.</answer><answer>Nothing. The program will not compile because no catch clauses are specified.</answer><answer>Hello world.</answer><answer>Hello world Finally executing</answer></answers></item>
<item><question>059 and given that EOFException and FileNotFoundException are both subclasses of IOException, and further assuming this block of code is placed into a class, which statement is most true concerning this code?
`
System.out.print(&quot;Start &quot;);
try {
    System.out.print(&quot;Hello world&quot;);
    throw new FileNotFoundException();
}
System.out.print(&quot; Catch Here &quot;); /* Line 7 */
catch(EOFException e) {
    System.out.print(&quot;End of file exception&quot;);
} catch(FileNotFoundException e) {
    System.out.print(&quot;File not found&quot;);
}`</question><answers><answer>The code will not compile.</answer><answer>Code output: Start Hello world File Not Found.</answer><answer>Code output: Start Hello world End of file exception.</answer><answer>Code output: Start Hello world Catch Here File not found.</answer></answers></item>
<item><question>080 and given that all methods of class FileOutputStream, including close(), throw an IOException, which of these is true?
`
public class MyProgram {
    public static void main(String args[]) {
        FileOutputStream out = null;
        try {
            out = new FileOutputStream(&quot;test.txt&quot;);
            out.write(122);
        } catch(IOException io) {
            System.out.println(&quot;IO Error.&quot;);
        } finally {
            out.close();
        }
    }
}
`</question><answers><answer>This program will compile successfully.</answer><answer>This program fails to compile due to an error at line 4.</answer><answer>This program fails to compile due to an error at line 6.</answer><answer>This program fails to compile due to an error at line 18.</answer></answers></item>
<item><question>081 Which statement is true?</question><answers><answer>catch(X x) can catch subclasses of X where X is a subclass of Exception.</answer><answer>The Error class is a RuntimeException.</answer><answer>Any statement that can throw an Error must be enclosed in a try block.</answer><answer>Any statement that can throw an Exception must be enclosed in a try block.</answer></answers></item>
<item><question>088 What will be the output of the program?
`
public class Test {
    public static void main(String[] args) {
        int x = 0;
        assert (x &amp;gt 0) ? &quot;assertion failed&quot; : &quot;assertion passed&quot; ;
        System.out.println(&quot;finished&quot;);
    }
}`</question><answers><answer>finished</answer><answer>Compilation fails.</answer><answer>An AssertionError is thrown and finished is output.</answer><answer>An AssertionError is thrown with the message &quot;assertion failed.&quot;</answer></answers></item>
<item><question>098 What will be the output of the program?
`
public class RTExcept {
    public static void throwit () {
        System.out.print(&quot;throwit &quot;);
        throw new RuntimeException();
    }
    public static void main(String [] args) {
        try {
            System.out.print(&quot;hello &quot;);
            throwit();
        } catch (Exception re ) {
            System.out.print(&quot;caught &quot;);
        } finally {
            System.out.print(&quot;finally &quot;);
        }
        System.out.println(&quot;after &quot;);
    }
}
`</question><answers><answer>hello throwit caught</answer><answer>Compilation fails</answer><answer>hello throwit RuntimeException caught after</answer><answer>hello throwit caught finally after</answer></answers></item>
<item><question>099 What will be the output of the program?
`
public class X {
    public static void main(String[] args) {
        try {
            badMethod();
            System.out.print(&quot;A&quot;);
        } catch (Exception ex) {
            System.out.print(&quot;B&quot;);
        }
        finally {
            System.out.print(&quot;C&quot;);
        }
        System.out.print(&quot;D&quot;);
    }
    public static void badMethod() {}
}`</question><answers><answer>AC</answer><answer>BC</answer><answer>ACD</answer><answer>ABCD</answer></answers></item>
<item><question>106 Which statement is true ?</question><answers><answer>Assertion expressions should not contain side effects.</answer><answer>Assertion expression values can be any primitive type.</answer><answer>Assertions should be used for enforcing preconditions on public methods.</answer><answer>An AssertionError thrown as a result of a failed assertion should always be handled by the enclosing method.</answer></answers></item>
<item><question>125 What will be the output of the program (when you run with the -ea option) ?
`
public class Test {
    public static void main(String[] args) {
        int x = 0;
        assert (x &amp;gt 0) : &quot;assertion failed&quot;; /* Line 6 */
        System.out.println(&quot;finished&quot;);
    }
}`</question><answers><answer>finished</answer><answer>Compilation fails.</answer><answer>An AssertionError is thrown.</answer><answer>An AssertionError is thrown and finished is output.</answer></answers></item>
<item><question>126 Which line is an example of an inappropriate use of assertions?
`
public class Test2 {
    public static int x;
    public static int foo(int y) {
        return y * 2;
    }
    public static void main(String [] args) {
        int z = 5;
        assert z &amp;gt 0; /* Line 11 */
        assert z &amp;gt 2: foo(z); /* Line 12 */
        if ( z &amp;lt; 7 )
            assert z &amp;gt 4; /* Line 14 */

        switch (z) {
            case 4: System.out.println(&quot;4 &quot;);
            case 5: System.out.println(&quot;5 &quot;);
            default: assert z &amp;lt; 10;
        }

        if ( z &amp;lt; 10 )
            assert z &amp;gt 4: z++; /* Line 22 */
        System.out.println(z);
    }
}`</question><answers><answer>Line 11</answer><answer>Line 12</answer><answer>Line 14</answer><answer>Line 22</answer></answers></item>
<item><question>127 Which statement is true?</question><answers><answer>Assertions can be enabled or disabled on a class-by-class basis.</answer><answer>Conditional compilation is used to allow tested classes to run at full speed.</answer><answer>Assertions are appropriate for checking the validity of arguments in a method.</answer><answer>The programmer can choose to execute a return statement or to throw an exception if an assertion fails.</answer></answers></item>
<item><question>138 What will be the output of the program?
`
class Exc0 extends Exception { }
class Exc1 extends Exc0 { } /* Line 2 */
public class Test {
    public static void main(String args[]) {
        try
        {
            throw new Exc1(); /* Line 9 */
        }
        catch (Exc0 e0) /* Line 11 */
        {
            System.out.println(&quot;Ex0 caught&quot;);
        }
        catch (Exception e)
        {
            System.out.println(&quot;exception caught&quot;);
        }
    }
}`</question><answers><answer>Ex0 caught</answer><answer>exception caught</answer><answer>Compilation fails because of an error at line 2.</answer><answer>Compilation fails because of an error at line 9.</answer></answers></item>
<item><question>139 Which answer most closely indicates the behavior of the program?
`
public class MyProgram {
    public static void throwit() {
        throw new RuntimeException();
    }

    public static void main(String args[]){
        try {
            System.out.println(&quot;Hello world &quot;);
            throwit();
            System.out.println(&quot;Done with try block &quot;);
        } finally {
            System.out.println(&quot;Finally executing &quot;);
        }
    }
}`</question><answers><answer>The program will not compile.</answer><answer>The program will print Hello world, then will print that a RuntimeException has occurred, then will print Done with try block, and then will print Finally executing.</answer><answer>The program will print Hello world, then will print that a RuntimeException has occurred, and then will print Finally executing.</answer><answer>The program will print Hello world, then will print Finally executing, then will print that a RuntimeException has occurred.</answer></answers></item>
<item><question>167 Which of the following statements is true?</question><answers><answer>It is sometimes good practice to throw an AssertionError explicitly.</answer><answer>Private getter() and setter() methods should not use assertions to verify arguments.</answer><answer>If an AssertionError is thrown in a try-catch block, the finally block will be bypassed.</answer><answer>It is proper to handle assertion statement failures using a catch (AssertionException ae) block.</answer></answers></item>
<item><question>175 What will be the output of the program?
`
public class X {
    public static void main(String [] args)
    {
        try
        {
            badMethod();
            System.out.print(&quot;A&quot;);
        }
        catch (Exception ex)
        {
            System.out.print(&quot;B&quot;);
        }
        finally
        {
            System.out.print(&quot;C&quot;);
        }
        System.out.print(&quot;D&quot;);
    }
    public static void badMethod()
    {
        throw new Error(); /* Line 22 */
    }
}`</question><answers><answer>ABCD</answer><answer>Compilation fails.</answer><answer>C is printed before exiting with an error message.</answer><answer>BC is printed before exiting with an error message.</answer></answers></item>
<item><question>176 What will be the output of the program?
`
public class X
{
    public static void main(String [] args)
    {
        try
        {
            badMethod(); /* Line 7 */
            System.out.print(&quot;A&quot;);
        }
        catch (Exception ex) /* Line 10 */
        {
            System.out.print(&quot;B&quot;); /* Line 12 */
        }
        finally /* Line 14 */
        {
            System.out.print(&quot;C&quot;); /* Line 16 */
        }
        System.out.print(&quot;D&quot;); /* Line 18 */
    }
    public static void badMethod()
    {
        throw new RuntimeException();
    }
}`</question><answers><answer>AB</answer><answer>BC</answer><answer>ABC</answer><answer>BCD</answer></answers></item>
<item><question>199 What will be the output of the program?
`
public class X
{
    public static void main(String [] args)
    {
        try
        {
            badMethod();
            System.out.print(&quot;A&quot;);
        }
        catch (RuntimeException ex) /* Line 10 */
        {
            System.out.print(&quot;B&quot;);
        }
        catch (Exception ex1)
        {
            System.out.print(&quot;C&quot;);
        }
        finally
        {
            System.out.print(&quot;D&quot;);
        }
        System.out.print(&quot;E&quot;);
    }
    public static void badMethod()
    {
        throw new RuntimeException();
    }
}`</question><answers><answer>BD</answer><answer>BCD</answer><answer>BDE</answer><answer>BCDE</answer></answers></item>
<item><question>200 At Point X on line 5, which code is necessary to make the code compile?
`
public class ExceptionTest
{
    class TestException extends Exception {}
    public void runTest() throws TestException {}
    public void test() /* Point X */
    {
        runTest();
    }
}`</question><answers><answer>No code is necessary.</answer><answer>throws Exception</answer><answer>catch ( Exception e )</answer><answer>throws RuntimeException</answer></answers></item>
<item><question>207 Which of the following statements is true?</question><answers><answer>If assertions are compiled into a source file, and if no flags are included at runtime, assertions will execute by default.</answer><answer>As of Java version 1.4, assertion statements are compiled by default.</answer><answer>With the proper use of runtime arguments, it is possible to instruct the VM to disable assertions for a certain class, and to enable assertions for a certain package, at the same time.</answer><answer>When evaluating command-line arguments, the VM gives -ea flags precedence over -da flags.</answer></answers></item>
<item><question>007 что будет распечатано при попытке выполнить следующий код?
`class A {
    final int get(int a, int b) { return 0; }
}
class B extends A {
    int get(int a, int b) { return 1; }
}
public class Test07{
    public static void main(String args[])
    {
        B b = new B();
        System.out.println(&quot;a=&quot; + b.get(0, 1));
    }`</question><answers><answer>a=0</answer><answer>a=1</answer><answer>Compilation fails</answer><answer>An exception will be thrown at the runtime</answer></answers></item>
<item><question>031 Which of the following class level (nonlocal) variable declarations will not compile?</question><answers><answer>A. protected int a;</answer><answer>B. transient int b = 3;</answer><answer>C. private synchronized int e;</answer><answer>D. volatile int d;</answer></answers></item>
<item><question>033 Which statement is true?
`
class A {
    A() {}
}

class B extends A { }
`</question><answers><answer>Class B&apos;S constructor is public.</answer><answer>Class B&apos;S constructor has no arguments.</answer><answer>Class B&apos;S constructor includes a call to this( ).</answer><answer>None of these.</answer></answers></item>
<item><question>034 which two statements, added independently at beginning of the program, allow the code to compile?
`
public class NewTreeSet extends java.util.TreeSet {
    public static void main(String [] args) {
        java.util.TreeSet t = new java.util.TreeSet();
        t.clear();
    }

    public void clear() {
        TreeMap m = new TreeMap();
        m.clear();
    }
}
`
1. No statement is required
2. import java.util.*;
3. import.java.util.Tree*;
4. import java.util.TreeSet;
5. import java.util.TreeMap;</question><answers><answer>1 only</answer><answer>2 and 5</answer><answer>3 and 4</answer><answer>3 and 5</answer></answers></item>
<item><question>035 What will be the output of the program?
`class Two {
     byte x;
 }

 class PassO {
     public static void main(String [] args) {
         PassO p = new PassO();
         p.start();
     }

     void start() {
         Two t = new Two();
         System.out.print(t.x + &quot; &quot;);
         Two t2 = fix(t);
         System.out.println(t.x + &quot; &quot; + t2.x);
     }

     Two fix(Two tt) {
         tt.x = 42;
         return tt;
     }
 }`</question><answers><answer>null null 42</answer><answer>0 0 42</answer><answer>0 42 42</answer><answer>0 0 0</answer></answers></item>
<item><question>044 What will be the output of the program?
`
public class Test044 {
    Test044() {
        System.out.print(&quot;Aha&quot;);
    }

    class Inner {
        Inner() {
            System.out.print(&quot;Uhu&quot;);
        }

        public void go() {
            System.out.print(&quot;Exe&quot;);
        }
    }

    void makeInner() {
        (new Inner() {}).go();
    }

    public static void main (String [] args) {
        Test044 f = new Test044();
        f.makeInner();
    }
}`</question><answers><answer>Compilation fails.</answer><answer>An error occurs at runtime.</answer><answer>It prints &quot;AhaUhuExe&quot;</answer><answer>It prints &quot;AhaExeUhu&quot;</answer><answer>It prints &quot;AxaExe&quot;</answer></answers></item>
<item><question>051 What is the prototype of the default constructor?
`public class Test { }`</question><answers><answer>Test( )</answer><answer>Test(void)</answer><answer>public Test( )</answer><answer>public Test(void)</answer></answers></item>
<item><question>054 What will be the output of the program?
`
public class Test {
    public static void main(String args[]) {
        class Foo {
            public int i = 3;
        }
        Object o = (Object)new Foo();
        Foo foo = (Foo)o;
        System.out.println(&quot;i = &quot; + foo.i);
    }
}`</question><answers><answer>i = 3</answer><answer>Compilation fails.</answer><answer>i = 5</answer><answer>A ClassCastException will occur.</answer></answers></item>
<item><question>055 What will be the output of the program?
`
public class A {
    void A() /* Line 3 */ {
        System.out.println(&quot;Class A&quot;);
    }
    public static void main(String[] args)
    {
        new A();
    }
}`</question><answers><answer>Class A</answer><answer>Compilation fails.</answer><answer>An exception is thrown at line 3.</answer><answer>The code executes with no output.</answer></answers></item>
<item><question>060 Which class does not override the equals() and hashCode() methods, inheriting them directly from class Object?</question><answers><answer>java.lang.String</answer><answer>java.lang.Double</answer><answer>java.lang.StringBuffer</answer><answer>java.lang.Character</answer></answers></item>
<item><question>063 Which is true about an anonymous inner class?</question><answers><answer>It can extend exactly one class and implement exactly one interface.</answer><answer>It can extend exactly one class and can implement multiple interfaces.</answer><answer>It can extend exactly one class or implement exactly one interface.</answer><answer>It can implement multiple interfaces regardless of whether it also extends a class.</answer></answers></item>
<item><question>064 which statement, if placed in a class other than MyOuter or MyInner, instantiates an instance of the nested class?
`
public class MyOuter {
    public static class MyInner {
        public static void foo() { }
    }
}`</question><answers><answer>MyOuter.MyInner m = new MyOuter.MyInner();</answer><answer>MyOuter.MyInner mi = new MyInner();</answer><answer>MyOuter m = new MyOuter();
MyOuter.MyInner mi = m.new MyOuter.MyInner();</answer><answer>MyInner mi = new MyOuter.MyInner();</answer></answers></item>
<item><question>071 You want subclasses in any package to have access to members of a superclass. Which is the most restrictive access that accomplishes this objective?</question><answers><answer>public</answer><answer>private</answer><answer>protected</answer><answer>transient</answer></answers></item>
<item><question>072 which two code fragments will compile?
`
interface Base {
    boolean m1 ();
    byte m2(short s);
}

1. interface Base2 implements Base {}
2. abstract class Class2 extends Base { public boolean m1(){ return true; }}
3. abstract class Class2 implements Base {}
4. abstract class Class2 implements Base { public boolean m1(){ return (7 &amp;gt 4); }}
5. abstract class Class2 implements Base { protected boolean m1(){ return (5 &amp;gt 7) }}
`</question><answers><answer>1 and 2</answer><answer>2 and 3</answer><answer>3 and 4</answer><answer>1 and 5</answer></answers></item>
<item><question>073 Which is valid in a class that extends class A?
`
class A {
    protected int method1(int a, int b) {
        return 0;
    }
}`</question><answers><answer>public int method1(int a, int b) {return 0; }</answer><answer>private int method1(int a, int b) { return 0; }</answer><answer>public short method1(int a, int b) { return 0; }</answer><answer>static protected int method1(int a, int b) { return 0; }</answer></answers></item>
<item><question>083 What will be the output of the program?
`
class H {
    public static void main (String[] args) {
        Object x = new Vector().elements();
        System.out.print((x instanceof Enumeration)+&quot;,&quot;);
        System.out.print((x instanceof Iterator)+&quot;,&quot;);
        System.out.print(x instanceof ListIterator);
    }
}`</question><answers><answer>Prints: false,false,false</answer><answer>Prints: false,false,true</answer><answer>Prints: false,true,false</answer><answer>Prints: true,false,false</answer></answers></item>
<item><question>085 which statement, inserted at line 10, creates an instance of Bar?
`
class Foo {
    class Bar{ }
}
class Test {
    public static void main (String [] args) {
        Foo f = new Foo();
        /* Line 10: Missing statement ? */
    }
}`</question><answers><answer>Foo.Bar b = new Foo.Bar();</answer><answer>Foo.Bar b = f.new Bar();</answer><answer>Bar b = new f.Bar();</answer><answer>Bar b = f.new Bar();</answer></answers></item>
<item><question>091 Given a method in a class, what access modifier do you use to restrict access to that method to only the other members of the same class?</question><answers><answer>final</answer><answer>static</answer><answer>private</answer><answer>protected</answer><answer>volatile</answer></answers></item>
<item><question>092 which two code fragments inserted at end of the program, will allow to compile?
`
interface DoMath {
    double getArea(int rad);
}
interface MathPlus {
    double getVol(int b, int h);
}

1. class AllMath extends DoMath { double getArea(int r); }
2. interface AllMath implements MathPlus { double getVol(int x, int y); }
3. interface AllMath extends DoMath { float getAvg(int h, int l); }
4. class AllMath implements MathPlus { double getArea(int rad); }
5. abstract class AllMath implements DoMath, MathPlus { public double getArea(int rad) { return rad * rad * 3.14; } }`</question><answers><answer>1 only</answer><answer>2 only</answer><answer>3 and 5</answer><answer>1 and 4</answer></answers></item>
<item><question>093 Which three statements are true?
`
1. The default constructor initialises method variables.
2. The default constructor has the same access as its class.
3. The default constructor invokes the no-arg constructor of the superclass.
4. If a class lacks a no-arg constructor, the compiler always creates a default constructor.
5. The compiler creates a default constructor only when there are no other constructors for the class.`</question><answers><answer>1, 2 and 4</answer><answer>2, 3 and 5</answer><answer>3, 4 and 5</answer><answer>1, 2 and 3</answer></answers></item>
<item><question>111 What is the most restrictive access modifier that will allow members of one class to have access to members of another class in the same package?</question><answers><answer>public</answer><answer>abstract</answer><answer>protected</answer><answer>synchronized</answer><answer>default access</answer></answers></item>
<item><question>112 You want a class to have access to members of another class in the same package. Which is the most restrictive access that accomplishes this objective?</question><answers><answer>public</answer><answer>private</answer><answer>protected</answer><answer>default access</answer></answers></item>
<item><question>113 Which is a valid declaration within an interface?</question><answers><answer>public static short stop = 23;</answer><answer>protected short stop = 23;</answer><answer>transient short stop = 23;</answer><answer>final void madness(short stop);</answer></answers></item>
<item><question>129 What will be the output of the program?
`
class Tree { }
class Pine extends Tree { }
class Oak extends Tree { }
public class Forest1 {
    public static void main (String [] args){
        Tree tree = new Pine();
        if( tree instanceof Pine )
            System.out.println (&quot;Pine&quot;);
        else if( tree instanceof Tree )
            System.out.println (&quot;Tree&quot;);
        else if( tree instanceof Oak )
            System.out.println ( &quot;Oak&quot; );
        else
            System.out.println (&quot;Oops &quot;);
    }
}`</question><answers><answer>Pine</answer><answer>Tree</answer><answer>Forest</answer><answer>Oops</answer></answers></item>
<item><question>133 What will be the output of the program?
`
class Super {
    public Integer getLength() {
        return new Integer(4);
    }
}

public class Sub extends Super {
    public Long getLength() {
        return new Long(5);
    }

    public static void main(String[] args) {
        Super sooper = new Super();
        Sub sub = new Sub();
        System.out.println(
        sooper.getLength().toString() + &quot;,&quot; + sub.getLength().toString() );
    }
}`</question><answers><answer>4, 4</answer><answer>4, 5</answer><answer>5, 4</answer><answer>Compilation fails.</answer></answers></item>
<item><question>150 What will be the output of the program?
`
class A {
    public A(int x){}
}
class B extends A { }
public class test {
    public static void main (String args []) {
        A a = new B();
        System.out.println(&quot;complete&quot;);
    }
}`</question><answers><answer>It compiles and runs printing nothing</answer><answer>Compiles but fails at runtime</answer><answer>Compile Error</answer><answer>Prints &quot;complete&quot;</answer></answers></item>
<item><question>151 Which two of the following are legal declarations for nonnested classes and interfaces?
`
final abstract class Test {}
public static interface Test {}
final public class Test {}
protected abstract class Test {}
protected interface Test {}
abstract public class Test {}
`</question><answers><answer>1 and 4</answer><answer>2 and 5</answer><answer>3 and 6</answer><answer>4 and 6</answer></answers></item>
<item><question>157 which one create an anonymous inner class from within class Bar?
`
class Boo {
    Boo(String s) { }
    Boo() { }
}
class Bar extends Boo {
    Bar() { }
    Bar(String s) {super(s);}
    void zoo()
    {
    // insert code here
    }
}`</question><answers><answer>Boo f = new Boo(24) { };</answer><answer>Boo f = new Bar() { };</answer><answer>Bar f = new Boo(String s) { };</answer><answer>Boo f = new Boo.Bar(String s) { };</answer></answers></item>
<item><question>158 Which statement is true about a static nested class?</question><answers><answer>You must have a reference to an instance of the enclosing class in order to instantiate it.</answer><answer>It does not have access to nonstatic members of the enclosing class.</answer><answer>It&apos;s variables and methods must be static.</answer><answer>It must extend the enclosing class.</answer></answers></item>
<item><question>159 Which constructs an anonymous inner class instance?</question><answers><answer>Runnable r = new Runnable() { };</answer><answer>Runnable r = new Runnable(public void run() { });</answer><answer>Runnable r = new Runnable { public void run(){}};</answer><answer>System.out.println(new Runnable() {public void run() { }});</answer></answers></item>
<item><question>160 What will be the output of the program?
`
public class Test160 {
    public static void main (String [] args) {
        class Horse {
            public String name; // 1
            public Horse(String s) {
                name = s;
            }
        }
        Object obj = new Horse(&quot;Zippo&quot;); // 2
        Horse h = (Horse) obj; // 3
        System.out.println(h.name);
    }
}`</question><answers><answer>An exception occurs at runtime at line 3.</answer><answer>It prints &quot;Zippo&quot;.</answer><answer>Compilation fails because of an error on line 1.</answer><answer>Compilation fails because of an error on line 2.</answer><answer>Compilation fails because of an error on line 3.</answer></answers></item>
<item><question>161 What will be the output of the program?
`
public abstract class AbstractTest {
    public int getNum() {
        return 45;
    }
    public abstract class Bar {
        public int getNum() {
            return 38;
        }
    }
    public static void main (String [] args) {
        AbstractTest t = new AbstractTest() {
            public int getNum() {
                return 22;
            }
        };
        AbstractTest.Bar f = t.new Bar() {
            public int getNum() {
                return 57;
            }
        };

        System.out.println(f.getNum() + &quot; &quot; + t.getNum());
    }
}`</question><answers><answer>57 22</answer><answer>45 38</answer><answer>45 57</answer><answer>An exception occurs at runtime.</answer></answers></item>
<item><question>168 What will be the output of the program?
`
public class WrapTest {
    public static void main(String [] args) {
        int result = 0;
        short s = 42;
        Long x = new Long(&quot;42&quot;);
        Long y = new Long(42);
        Short z = new Short(&quot;42&quot;);
        Short x2 = new Short(s);
        Integer y2 = new Integer(&quot;42&quot;);
        Integer z2 = new Integer(42);

        if (x == y) /* Line 13 */
            result = 1;
        if (x.equals(y) ) /* Line 15 */
            result = result + 10;
        if (x.equals(z) ) /* Line 17 */
            result = result + 100;
        if (x.equals(x2) ) /* Line 19 */
            result = result + 1000;
        if (x.equals(z2) ) /* Line 21 */
            result = result + 10000;
       System.out.println(&quot;result = &quot; + result);
    }
}`</question><answers><answer>result = 1</answer><answer>result = 10</answer><answer>result = 11</answer><answer>result = 11010</answer></answers></item>
<item><question>171 What will be the output of the program?
`
class Super{
    public int i = 0;

    public Super(String text) /* Line 4 */{
        i = 1;
    }
}

class Sub extends Super{
    public Sub(String text)
    {
        i = 2;
    }

    public static void main(String args[])
    {
        Sub sub = new Sub(&quot;Hello&quot;);
        System.out.println(sub.i);
    }
}`</question><answers><answer>0</answer><answer>1</answer><answer>2</answer><answer>Compilation fails</answer><answer>Runtime Exception</answer></answers></item>
<item><question>172What will be the output of the program?
`
class Base
{
    Base()
    {
        System.out.print(&quot;Base&quot;);
    }
}
public class Alpha extends Base
{
    public static void main(String[] args)
    {
        new Alpha(); /* Line 12 */
        new Base(); /* Line 13 */
    }
}`</question><answers><answer>Base</answer><answer>BaseBase</answer><answer>Compilation fails</answer><answer>The code runs with no output</answer></answers></item>
<item><question>173 What will be the output of the program?
`
import java.util.*;
public class NewTreeSet2 extends NewTreeSet
{
    public static void main(String [] args)
    {
        NewTreeSet2 t = new NewTreeSet2();
        t.count();
    }
}
protected class NewTreeSet
{
    void count()
    {
        for (int x = 0; x &amp;lt; 7; x++,x++ )
        {
            System.out.print(&quot; &quot; + x);
        }
    }
}`</question><answers><answer>0 2 4</answer><answer>0 2 4 6</answer><answer>Compilation fails at line 2</answer><answer>Compilation fails at line 10</answer></answers></item>
<item><question>016 Есть код
`
public class X implements Runnable {
    public void run() {
        System.out.println(&quot;hello&quot;);
    }
}`
как запустить этот код ?</question><answers><answer>Thread t = new Thread(X);</answer><answer>Thread t = new Thread(X); t.start();</answer><answer>X run = new X(); Thread t = new Thread(run); t.start();</answer><answer>Thread t = new Thread(); x.run();</answer></answers></item>
<item><question>017 что будет результатом выполнения
`
public class Test017 extends Thread {
    public static void main(String [] args) {
        Test017 t = new Test017();
        t.start();
        System.out.print(&quot;one. &quot;);
        t.start();
        System.out.print(&quot;two. &quot;);
    }

    public void run() {
        System.out.print(&quot;Thread &quot;);
    }
}`</question><answers><answer>ошибка компиляции</answer><answer>An exception occurs at runtime.</answer><answer>Напечатает &quot;Thread one. Thread two.&quot;</answer><answer>Не знаю / не понятно.</answer></answers></item>
<item><question>018 что будет результатом выполнения
`class MyThread extends Thread {
     MyThread() {}
     MyThread(Runnable r) {super(r); }
     public void run() {
         System.out.print(&quot;Inside a Thread &quot;);
     }
 }

 class MyRunnable implements Runnable {
     public void run() {
         System.out.print(&quot;Inside Runnable&quot;);
     }
 }

 class Test018 {
     public static void main(String[] args) {
         new MyThread().start();
         new MyThread(new MyRunnable()).start();
     }
 }
`</question><answers><answer>напечатает &quot;Inside Thread Inside Thread&quot;</answer><answer>напечатает &quot;Inside Thread Inside Runnable&quot;</answer><answer>не откомпилируется</answer><answer>An exception at runtime</answer></answers></item>
<item><question>019 что напечатает программа
`
public class Test019 implements Runnable {
    int x, y;
    public void run() {
        for(int i = 0; i &amp;lt; 1000; i++)
            synchronized(this) {
                x = 11;
                y = 11;
            }
        System.out.print(x + &quot; &quot; + y + &quot; &quot;);
    }

    public static void main(String args[]) {
        Test019 run = new Test019();
        Thread t1 = new Thread(run);
        Thread t2 = new Thread(run);
        t1.start();
        t2.start();
    }
}`</question><answers><answer>случится DeadLock</answer><answer>12 12 12 12</answer><answer>ошибка компиляцмм</answer><answer>поведение не определено</answer></answers></item>
<item><question>065 Which two are valid constructors for Thread?
`
Thread(Runnable r, String name)
Thread()
Thread(int priority)
Thread(Runnable r, ThreadGroup g)
Thread(Runnable r, int priority)
`</question><answers><answer>1 and 3</answer><answer>2 and 4</answer><answer>1 and 2</answer><answer>2 and 5</answer></answers></item>
<item><question>066 Which two of the following methods are defined in class Thread?
`
start()
wait()
notify()
run()
terminate()
`</question><answers><answer>1 and 4</answer><answer>2 and 3</answer><answer>3 and 4</answer><answer>2 and 4</answer><answer>3 and 5</answer></answers></item>
<item><question>067 Under which conditions will a currently executing thread stop?
`
1. When an interrupted exception occurs.
2. When a thread of higher priority is ready (becomes runnable).
3. When the thread creates a new thread.
4. When the stop() method is called.`</question><answers><answer>1 and 3</answer><answer>2 and 4</answer><answer>1 and 4</answer><answer>2 and 3</answer></answers></item>
<item><question>068 Which statement is true?</question><answers><answer>The notifyAll() method must be called from a synchronized context.</answer><answer>To call wait(), an object must own the lock on the thread.</answer><answer>The notify() method is defined in class java.lang.Thread.</answer><answer>The notify() method causes a thread to immediately release its locks.</answer></answers></item>
<item><question>086 Which three guarantee that a thread will leave the running state?

`
1. yield()
2. wait()
3. notify()
4. notifyAll()
5. sleep(1000)
6. aLiveThread.join()
7. Thread.killThread()
`</question><answers><answer>1, 2 and 4</answer><answer>2, 5 and 6</answer><answer>3, 4 and 7</answer><answer>4, 5 and 7</answer></answers></item>
<item><question>087 Which will contain the body of the thread?</question><answers><answer>run();</answer><answer>start();</answer><answer>stop();</answer><answer>main();</answer></answers></item>
<item><question>102 What will be the output of the program?
`
public class Test102 extends Thread {
    final StringBuffer sb1 = new StringBuffer();
    final StringBuffer sb2 = new StringBuffer();

    public static void main(String args[]) {
        final Test102 h = new Test102();

        new Thread() {
            public void run() {
                synchronized(this) {
                    h.sb1.append(&quot;A&quot;);
                    h.sb2.append(&quot;B&quot;);
                    System.out.print(h.sb1);
                    System.out.print(h.sb2);
                }
            }
        }.start();

        new Thread() {
            public void run() {
                synchronized(this) {
                    h.sb1.append(&quot;D&quot;);
                    h.sb2.append(&quot;C&quot;);
                    System.out.print(h.sb2);
                    System.out.print(h.sb1);
                }
            }
        }.start();
    }
}`</question><answers><answer>ABBCAD</answer><answer>ABCBCAD</answer><answer>CDADACB</answer><answer>Output determined by the underlying platform.</answer><answer>Output not determined.</answer></answers></item>
<item><question>103 What will be the output of the program?
`
class MyThread extends Thread {
    public static void main(String [] args) {
        MyThread t = new MyThread();
        Thread x = new Thread(t);
        x.start(); /* Line 7 */
    }
    public void run() {
        for(int i = 0; i &amp;lt; 3; ++i) {
            System.out.print(i + &quot;..&quot;);
        }
    }
}`</question><answers><answer>Compilation fails.</answer><answer>1..2..3..</answer><answer>0..1..2..3..</answer><answer>0..1..2..</answer></answers></item>
<item><question>104 Which statement is true?</question><answers><answer>A static method cannot be synchronized.</answer><answer>If a class has synchronized code, multiple threads can still access the nonsynchronized code.</answer><answer>Variables can be protected from concurrent access problems by marking them with the synchronized keyword.</answer><answer>When a thread sleeps, it releases its locks.</answer></answers></item>
<item><question>120 Which of the following will not directly cause a thread to stop?</question><answers><answer>notify()</answer><answer>wait()</answer><answer>InputStream access</answer><answer>sleep()</answer></answers></item>
<item><question>121 What will be the output of the program? and assuming that data must be protected from corruption, what ”if ....” can you add to the preceding code to ensure the integrity of data?
`
public class SyncTest {
    public static void main (String [] args) {
        Thread t = new Thread() {
            Foo f = new Foo();
            public void run() {
                f.increase(20);
            }
        };
    t.start();
    }
}
class Foo {
    private int data = 23;
    public void increase(int amt) {
        int x = data;
        data = x + amt;
    }
}`</question><answers><answer>Synchronize the run method.</answer><answer>Wrap a synchronize(this) around the call to f.increase().</answer><answer>The existing code will cause a runtime exception.</answer><answer>Synchronize the increase() method</answer></answers></item>
<item><question>122 What will be the output of the program?
`
class Test122  {
static final StringBuffer sb1 = new StringBuffer();
static final StringBuffer sb2 = new StringBuffer();
public static void main(String[] args) {
    new Thread() {
        public void run() {
            synchronized(sb1) {
                sb1.append(&quot;A&quot;);
                sb2.append(&quot;B&quot;);
            }
        }
    }.start();

    new Thread() {
        public void run() {
            synchronized(sb1) {
                sb1.append(&quot;C&quot;);
                sb2.append(&quot;D&quot;);
            }
        }
    }.start(); /* Line 28 */

    System.out.println (sb1 + &quot; &quot; + sb2);
    }
}`</question><answers><answer>main() will finish before starting threads.</answer><answer>main() will finish in the middle of one thread.</answer><answer>main() will finish after one thread.</answer><answer>Cannot be determined.</answer></answers></item>
<item><question>123 Which statement is true?
``</question><answers><answer>If only one thread is blocked in the wait method of an object, and another thread executes the modify on that same object, then the first thread immediately resumes execution.</answer><answer>If a thread is blocked in the wait method of an object, and another thread executes the notify method on the same object, it is still possible that the first thread might never resume execution.</answer><answer>If a thread is blocked in the wait method of an object, and another thread executes the notify method on the same object, then the first thread definitely resumes execution as a direct and sole consequence of the notify call.</answer><answer>If two threads are blocked in the wait method of one object, and another thread executes the notify method on the same object, then the first thread that executed the wait call first definitely resumes execution as a direct and sole consequence of the notify call.</answer></answers></item>
<item><question>143 Which of the following will directly stop the execution of a Thread?</question><answers><answer>wait()</answer><answer>notify()</answer><answer>notifyall()</answer><answer>exits synchronized code</answer></answers></item>
<item><question>144 Which class or interface defines the wait(), notify(),and notifyAll() methods?</question><answers><answer>Object</answer><answer>Thread</answer><answer>Runnable</answer><answer>Class</answer></answers></item>
<item><question>145 What will be the output of the program?
`
public class ThreadDemo {
    private int count = 1;
    public synchronized void doSomething() {
        for (int i = 0; i &amp;lt; 10; i++)
            System.out.println(count++);
    }
    public static void main(String[] args) {
        ThreadDemo demo = new ThreadDemo();
        Thread a1 = new A(demo);
        Thread a2 = new A(demo);
        a1.start();
        a2.start();
    }
}
class A extends Thread {
    ThreadDemo demo;
    public A(ThreadDemo td) {
        demo = td;
    }
    public void run() {
        demo.doSomething();
    }
}`</question><answers><answer>It will print the numbers 0 to 19 sequentially</answer><answer>It will print the numbers 1 to 20 sequentially</answer><answer>It will print the numbers 1 to 20, but the order cannot be determined</answer><answer>The code will not compile.</answer></answers></item>
<item><question>146 Which two can be used to create a new Thread?
`
Extend java.lang.Thread and override the run() method.
Extend java.lang.Runnable and override the start() method.
Implement java.lang.Thread and implement the run() method.
Implement java.lang.Runnable and implement the run() method.
Implement java.lang.Thread and implement the start() method.
`</question><answers><answer>1 and 2</answer><answer>2 and 3</answer><answer>1 and 4</answer><answer>3 and 4</answer></answers></item>
<item><question>147 The following block of code creates a Thread using a Runnable target:
`
Runnable target = new MyRunnable();
Thread myThread = new Thread(target);
`
Which of the following classes can be used to create the target, so that the preceding code compiles correctly?</question><answers><answer>public class MyRunnable extends Runnable{public void run(){}}</answer><answer>public class MyRunnable extends Object{public void run(){}}</answer><answer>public class MyRunnable implements Runnable{public void run(){}}</answer><answer>public class MyRunnable implements Runnable{void run(){}}</answer></answers></item>
<item><question>162 What will be the output of the program?
`
public class Q126 implements Runnable {
    private int x;
    private int y;

    public static void main(String [] args) {
        Q126 that = new Q126();
        (new Thread(that)).start( ); /* Line 8 */
        (new Thread(that)).start( ); /* Line 9 */
    }
    public synchronized void run( ) /* Line 11 */{
        for (;;) /* Line 13 */{
            x++;
            y++;
            System.out.println(&quot;x = &quot; + x + &quot;y = &quot; + y);
        }
    }
}`</question><answers><answer>An error at line 11 causes compilation to fail</answer><answer>Errors at lines 8 and 9 cause compilation to fail.</answer><answer>The program prints pairs of values for x and y that might not always be the same on the same line (for example, &quot;x=2, y=1&quot;)</answer><answer>The program prints pairs of values for x and y that are always the same on the same line (for example, &quot;x=1, y=1&quot;. In addition, each value appears once (for example, &quot;x=1, y=1&quot; followed by &quot;x=2, y=2&quot;)</answer></answers></item>
<item><question>163 What will be the output of the program?
`
class MyThread extends Thread {
    public static void main(String [] args) {
        MyThread t = new MyThread(); /* Line 5 */
        t.run();  /* Line 6 */
    }

    public void run() {
        for(int i=1; i &amp;lt; 3; ++i)
        {
            System.out.print(i + &quot;..&quot;);
        }
    }
}`</question><answers><answer>What will be the output of the program?</answer><answer>This code will not compile due to line 5.</answer><answer>This code will not compile due to line 6.</answer><answer>1..2..</answer><answer>1..2..3..</answer></answers></item>
<item><question>164 What will be the output of the program?
`
public class ThreadTest extends Thread {
    public void run() {
        System.out.println(&quot;In run&quot;);
        yield();
        System.out.println(&quot;Leaving run&quot;);
    }
    public static void main(String []argv) {
        (new ThreadTest()).start();
    }
}`</question><answers><answer>The code fails to compile in the main() method</answer><answer>The code fails to compile in the run() method</answer><answer>Only the text &quot;In run&quot; will be displayed</answer><answer>The text &quot;In run&quot; followed by &quot;Leaving run&quot; will be displayed</answer></answers></item>
<item><question>165 What will be the output of the program?
`
public class Test165 implements Runnable {
    private int x;
    private int y;

    public synchronized void run() {
        for(int i = 0; i &amp;lt; 10; i++) {
            x++; y++;
            System.out.println(&quot;x = &quot; + x + &quot;, y = &quot; + y);
        }
    }

    public static void main(String p[]) {
        Test165 that = new Test165();
        (new Thread(that)).start();
        (new Thread(that)).start();
    }
}`</question><answers><answer>Compilation error.</answer><answer>Runtime exception</answer><answer>Will print in this order: x = 1 y = 1 x = 2 y = 2 x = 3 y = 3 x = 4 y = 4 x = 5 y = 5... but the output will be produced by both threads running simultaneously.</answer><answer>Will print in this order: x = 1 y = 1 x = 2 y = 2 x = 3 y = 3 x = 4 y = 4 x = 5 y = 5... but the output will be produced by first one thread then the other. This is guaranteed by the synchronised code.</answer><answer>Will print in this order: x = 1 y = 2 x = 3 y = 4 x = 5 y = 6 x = 7 y = 8...</answer></answers></item>
<item><question>174 Which two statements are true for any concrete class implementing the java.lang.Runnable interface?
`
You can extend the Runnable interface as long as you override the public run() method.
The class must contain a method called run() from which all code for that thread will be initiated.
The class must contain an empty public void method named run().
The class must contain a public void method named runnable().
The class definition must include the words implements Threads and contain a method called run().
The mandatory method must be public, with a return type of void, must be called run(), and cannot take any arguments.
`</question><answers><answer>1 and 3</answer><answer>2 and 4</answer><answer>1 and 5</answer><answer>2 and 6</answer></answers></item>
<item><question>189 What will be the output of the program?
`
public class Test
{
    public static void main(String[] args)
    {
        final StringBuffer a = new StringBuffer();
        final StringBuffer b = new StringBuffer();

        new Thread()
        {
            public void run()
            {
                System.out.print(a.append(&quot;A&quot;));
                synchronized(b)
                {
                    System.out.print(b.append(&quot;B&quot;));
                }
            }
        }.start();

        new Thread()
        {
            public void run()
            {
                System.out.print(b.append(&quot;C&quot;));
                synchronized(a)
                {
                    System.out.print(a.append(&quot;D&quot;));
                }
            }
        }.start();
    }
}`</question><answers><answer>ACCBAD</answer><answer>ABBCAD</answer><answer>CDDACB</answer><answer>Indeterminate output</answer></answers></item>
<item><question>205 Which method must be defined by a class implementing the java.lang.Runnable interface?</question><answers><answer>void run()</answer><answer>public void run()</answer><answer>public void start()</answer><answer>void run(int priority)</answer></answers></item>
<item><question>206 Which two statements are true?
`
Deadlock will not occur if wait()/notify() is used
A thread will resume execution as soon as its sleep duration expires.
Synchronization can prevent two objects from being accessed by the same thread.
The wait() method is overloaded to accept a duration.
The notify() method is overloaded to accept a duration.
Both wait() and notify() must be called from a synchronized context.
`</question><answers><answer>1 and 2</answer><answer>3 and 5</answer><answer>4 and 6</answer><answer>1 and 3</answer></answers></item>
<item><question>045 At what point is the Bar object, created on line 6, eligible for garbage collection?
`
class Bar { }
class Test {
    Bar doBar() {
        Bar b = new Bar(); // 6
        return b; // 7
    }
    public static void main (String args[]) {
        Test t = new Test();  // 11
        Bar newBar = t.doBar();  // 12
        System.out.println(&quot;newBar&quot;);
        newBar = new Bar(); // 14
        System.out.println(&quot;finishing&quot;); // 15
    }
}
`</question><answers><answer>after line 12</answer><answer>after line 14</answer><answer>after line 7, when doBar() completes</answer><answer>after line 15, when main() completes</answer></answers></item>
<item><question>046 When is the Demo object eligible for garbage collection?
`
class Test {
    private Demo d;
    void start()
    {
        d = new Demo();
        this.takeDemo(d); /* Line 7 */
    } /* Line 8 */
    void takeDemo(Demo demo)
    {
        demo = null;
        demo = new Demo();
    }
}
`</question><answers><answer>After line 7</answer><answer>After line 8</answer><answer>After the start() method completes</answer><answer>When the instance running this code is made eligible for garbage collection.</answer></answers></item>
<item><question>047 After line 8 runs. how many objects are eligible for garbage collection?
`
public class X {
    public static void main(String [] args)
    {
        X x = new X();
        X x2 = m1(x); /* Line 6 */
        X x4 = new X();
        x2 = x4; /* Line 8 */
        doComplexStuff();
    }
    static X m1(X mx)
    {
        mx = new X();
        return mx;
    }
}
`</question><answers><answer>0</answer><answer>1</answer><answer>2</answer><answer>3</answer></answers></item>
<item><question>069 garbage collector
`
public Object m() {
    Object o = new Float(3.14F);
    Object[] oa = new Object[l];
    oa[0] = o; /* Line 5 */
    o = null;  /* Line 6 */
    oa[0] = null; /* Line 7 */
    return o; /* Line 8 */
}`</question><answers><answer>just after line 5</answer><answer>just after line 6</answer><answer>just after line 7</answer><answer>just after line 8</answer></answers></item>
<item><question>105 Which statement is true?</question><answers><answer>Calling Runtime.gc() will cause eligible objects to be garbage collected.</answer><answer>The garbage collector uses a mark and sweep algorithm.</answer><answer>If an object can be accessed from a live thread, it can&apos;t be garbage collected.</answer><answer>If object 1 refers to object 2, then object 2 can&apos;t be garbage collected.</answer></answers></item>
<item><question>124 Which statement is true?</question><answers><answer>Memory is reclaimed by calling Runtime.gc().</answer><answer>Objects are not collected if they are accessible from live threads.</answer><answer>An OutOfMemory error is only thrown if a single block of memory cannot be found that is large enough for a particular requirement.</answer><answer>Objects that have finalize() methods always have their finalize() methods called before the program ends.</answer></answers></item>
<item><question>166 What allows the programmer to destroy an object x?</question><answers><answer>x.delete()</answer><answer>x.finalize()</answer><answer>Runtime.getRuntime().gc()</answer><answer>Only the garbage collection system can destroy an object.</answer></answers></item>
<item><question>181 Which cannot directly cause a thread to stop executing?
``</question><answers><answer>Calling the SetPriority() method on a Thread object.</answer><answer>Calling the wait() method on an object.</answer><answer>Calling notify() method on an object.</answer><answer>Calling read() method on an InputStream object.</answer></answers></item>
<item><question>182 Which method registers a thread in a thread scheduler?
``</question><answers><answer>run();</answer><answer>construct();</answer><answer>start();</answer><answer>register();</answer></answers></item>
<item><question>183 which of these will create and start this thread?
`
public class MyRunnable implements Runnable
{
    public void run()
    {
        // some code here
    }
}
`</question><answers><answer>new Runnable(MyRunnable).start();</answer><answer>new Thread(MyRunnable).run();</answer><answer>new Thread(new MyRunnable()).start();</answer><answer>new MyRunnable().start();</answer></answers></item>
<item><question>184 When is the B object, created in line 3, eligible for garbage collection?
`
void start() {
    A a = new A();
    B b = new B();
    a.s(b);
    b = null; /* Line 5 */
    a = null;  /* Line 6 */
    System.out.println(&quot;start completed&quot;); /* Line 7 */
}
`</question><answers><answer>after line 5</answer><answer>after line 6</answer><answer>after line 7</answer><answer>There is no way to be absolutely certain.</answer></answers></item>
<item><question>185 after line 11 runs, how many objects are eligible for garbage collection?
`
class X2
{
    public X2 x;
    public static void main(String [] args)
    {
        X2 x2 = new X2();  /* Line 6 */
        X2 x3 = new X2();  /* Line 7 */
        x2.x = x3;
        x3.x = x2;
        x2 = new X2();
        x3 = x2; /* Line 11 */
        doComplexStuff();
    }
}`</question><answers><answer>0</answer><answer>1</answer><answer>2</answer><answer>3</answer></answers></item>
<item><question>030 What will be printer
`
public class Quizz5 {
    public static void main(String[] args) {
        ArrayList&amp;lt;Integer&amp;gt a = new ArrayList&amp;lt;&amp;gt();
        System.out.println(a.getClass().getSimpleName());

        Set&amp;lt;Integer&amp;gt s = new HashSet&amp;lt;Integer&amp;gt();
        System.out.println(s.getClass().getSimpleName());

        Map&amp;lt;Integer, String&amp;gt x1 = new HashMap&amp;lt;&amp;gt();
        System.out.println(x1.getClass().getSimpleName());

        Map&amp;lt;Integer, String&amp;gt x = new HashMap&amp;lt;Integer, String&amp;gt() {{
            put(1, &quot;A&quot;);
            put(2, &quot;B&quot;);
            put(3, &quot;C&quot;);
        }};
        System.out.println(x.getClass().getSimpleName());
        System.out.println(x.getClass().getName());
        Map&amp;lt;Integer, String&amp;gt x2 = new HashMap&amp;lt;Integer, String&amp;gt() {{
            put(1, &quot;A&quot;);
            put(2, &quot;B&quot;);
            put(3, &quot;C&quot;);
        }};
        System.out.println(x2.getClass().getName());
    }
}`</question><answers></answers></item></items>